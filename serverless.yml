org: danielboggiano
app: my-aws-cuentas-api
service: my-aws-cuentas-api

frameworkVersion: "2"

custom:
  version: "v5"
  categoriasTableName: "categorias-table-${self:custom.version}-${self:provider.stage}"
  cuentasTableName: "cuentas-table-${self:custom.version}-${self:provider.stage}"
  empresasTableName: "empresas-table-${self:custom.version}-${self:provider.stage}"
  registrosTableName: "registros-table-${self:custom.version}-${self:provider.stage}"
  subcategoriasTableName: "subcategorias-table-${self:custom.version}-${self:provider.stage}"
  usersTableName: "users-table-${self:custom.version}-${self:provider.stage}"

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: "20201221"
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [CategoriasTable, Arn]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [CuentasTable, Arn]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [EmpresasTable, Arn]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [RegistrosTable, Arn]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [SubcategoriasTable, Arn]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    CATEGORIAS_TABLE: ${self:custom.categoriasTableName}
    CUENTAS_TABLE: ${self:custom.cuentasTableName}
    EMPRESAS_TABLE: ${self:custom.empresasTableName}
    REGISTROS_TABLE: ${self:custom.registrosTableName}
    SUBCATEGORIAS_TABLE: ${self:custom.subcategoriasTableName}
    USERS_TABLE: ${self:custom.usersTableName}

functions:
  api:
    handler: handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    CategoriasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: cuentaId
            AttributeType: S
        KeySchema:
          - AttributeName: cuentaId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.categoriasTableName}
    CuentasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: cuentaId
            AttributeType: S
        KeySchema:
          - AttributeName: cuentaId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.cuentasTableName}
    EmpresasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: cuentaId
            AttributeType: S
        KeySchema:
          - AttributeName: cuentaId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.empresasTableName}
    RegistrosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: cuentaId
            AttributeType: S
        KeySchema:
          - AttributeName: cuentaId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.registrosTableName}
    SubcategoriasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: cuentaId
            AttributeType: S
        KeySchema:
          - AttributeName: cuentaId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.subcategoriasTableName}
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.usersTableName}

plugins:
  - serverless-dynamodb-local
  - serverless-offline
